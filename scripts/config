#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS
#=================================================

app=$YNH_APP_INSTANCE_NAME

final_path=$(ynh_app_setting_get $app final_path)

#=================================================
# SPECIFIC CODE
#=================================================
# DECLARE GENERIC FUNCTION
#=================================================


#=================================================
# LOAD VALUES
#=================================================

# Load the real value from the app config or elsewhere.
# Then get the value from the form.
# If the form has a value for a variable, take the value from the form,
# Otherwise, keep the value from the app config.

old_vpn_host="$(ynh_app_setting_get $app server_name)"
vpn_host="${YNH_CONFIG_MAIN_VPN_HOST:-$old_vpn_host}"

old_vpn_port="$(ynh_app_setting_get $app server_port)"
vpn_port="${YNH_CONFIG_MAIN_VPN_PORT:-$old_vpn_port}"

old_vpn_proto="$(ynh_app_setting_get $app server_proto)"
vpn_proto="${YNH_CONFIG_MAIN_VPN_PROTO:-$old_vpn_proto}"

old_vpn_ip6_net="$(ynh_app_setting_get $app server_ip6)"
vpn_ip6_net="${YNH_CONFIG_MAIN_VPN_IP6_NET:-$old_vpn_ip6_net}"

old_auth_username="$(ynh_app_setting_get $app login_user)"
auth_username="${YNH_CONFIG_MAIN_AUTH_USERNAME:-$old_auth_username}"

old_auth_password="$(ynh_app_setting_get $app login_passphrase)"
auth_password="${YNH_CONFIG_MAIN_AUTH_PASSWORD:-$old_auth_password}"

old_dns_dns0="$(ynh_app_setting_get $app dns0)"
dns_dns0="${YNH_CONFIG_MAIN_DNS_DNS0:-$old_dns_dns0}"

old_dns_dns1="$(ynh_app_setting_get $app dns1)"
dns_dns1="${YNH_CONFIG_MAIN_DNS_DNS1:-$old_dns_dns1}"

#=================================================
# SHOW_CONFIG FUNCTION FOR 'SHOW' COMMAND
#=================================================

show_config() {
	# here you are supposed to read some config file/database/other then print the values
	# ynh_return "YNH_CONFIG_${PANEL_ID}_${SECTION_ID}_${OPTION_ID}=value"

	ynh_return "YNH_CONFIG_MAIN_VPN_HOST=$vpn_host"
	ynh_return "YNH_CONFIG_MAIN_VPN_PORT=$vpn_port"
	ynh_return "YNH_CONFIG_MAIN_VPN_PROTO=$vpn_proto"
	ynh_return "YNH_CONFIG_MAIN_VPN_IP6_NET=$vpn_ip6_net"

	#ynh_return "YNH_CONFIG_MAIN_AUTH_SERVER_CA=$auth_server_ca"
	#ynh_return "YNH_CONFIG_MAIN_AUTH_CRT=$auth_crt"
	#ynh_return "YNH_CONFIG_MAIN_AUTH_KEY=$auth_key"
	#ynh_return "YNH_CONFIG_MAIN_AUTH_TA=$auth_ta"
	ynh_return "YNH_CONFIG_MAIN_AUTH_USERNAME=$auth_username"
	ynh_return "YNH_CONFIG_MAIN_AUTH_PASSWORD=$auth_password"

	ynh_return "YNH_CONFIG_MAIN_DNS_DNS0=$dns_dns0"
	ynh_return "YNH_CONFIG_MAIN_DNS_DNS1=$dns_dns1"
}

#=================================================
# MODIFY THE CONFIGURATION
#=================================================

apply_config() {

#	if [ "$pad_config_nocolors" != "$old_pad_config_nocolors" ]
#	then
#		ynh_replace_string --match_string="\(\"noColors\" *: \).*," --replace_string="\1$pad_config_nocolors," --target_file="$config_file"
#		ynh_app_setting_set --app=$app --key=pad_config_nocolors --value="$pad_config_nocolors"
#	fi
    echo ok

}

#=================================================
# GENERIC FINALIZATION
#=================================================
# SELECT THE ACTION FOLLOWING THE GIVEN ARGUMENT
#=================================================

case $1 in
  show) show_config;;
  apply) apply_config;;
esac
